name: Deploy to AWS ECS

on:
  push:
    branches:
      - main
  pull_request:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY_URI: ${{ secrets.ECR_REPOSITORY_URI }}
  IMAGE_TAG: "1.0.${{ github.run_number }}"
  TERRAFORM_WORKING_DIR: ./

jobs:
  # üü¢ Step 1: Run SonarQube Scan
  sonar-scan:
    name: Run SonarQube Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adoptopenjdk'

      - name: Run SonarQube Scanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          export JAVA_OPTS="-Dsonar.java.jdkHome=/usr/lib/jvm/java-11-openjdk-amd64"
          sonar-scanner \
            -Dsonar.projectKey=CliXX-App-Samuel \
            -Dsonar.login=${SONAR_TOKEN} \
            -Dsonar.host.url=http://3.85.107.89:9000/

  # üü¢ Step 2: Restore RDS Database from Snapshot (Using Ansible)
  restore-db:
    name: Restore Database from Snapshot
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Ansible & AWS CLI
        run: |
          sudo apt update
          sudo apt install -y python3-pip ansible awscli
          pip3 install boto3 botocore

      - name: Run Ansible Playbook to Restore DB
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          ansible-playbook -vvv deploy_db_ansible/deploy_db.yml

  # üü¢ Step 3: Manual Approval Required
  manual-approval:
    name: Manual Approval Before Deployment
    runs-on: ubuntu-latest
    needs: restore-db
    steps:
      - name: Wait for Manual Approval
        run: |
          echo "**************************************************"
          echo " üõë MANUAL APPROVAL REQUIRED! üõë "
          echo " 1Ô∏è‚É£ Verify the AWS RDS instance is restored."
          echo " 2Ô∏è‚É£ Ensure database connection is successful."
          echo " 3Ô∏è‚É£ Manually trigger the next workflow in GitHub Actions."
          echo "**************************************************"
